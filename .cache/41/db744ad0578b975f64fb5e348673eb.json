{"id":"node_modules/argparse/lib/help/added_formatters.js","dependencies":[{"name":"/Users/zach/Code/brooklyn-js-tensorflow/package.json","includedInParent":true,"mtime":1574314359001},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/.babelrc","includedInParent":true,"mtime":1574222996221},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/package.json","includedInParent":true,"mtime":1574223218973},{"name":"util","loc":{"line":3,"column":22},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/added_formatters.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/util/util.js"},{"name":"../const","loc":{"line":6,"column":16},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/added_formatters.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/const.js"},{"name":"../utils","loc":{"line":8,"column":17},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/added_formatters.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/utils.js"},{"name":"./formatter.js","loc":{"line":9,"column":28},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/added_formatters.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/formatter.js"}],"generated":{"js":"'use strict';\n\nvar util    = require('util');\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\nvar HelpFormatter = require('./formatter.js');\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which adds default values to argument help.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction ArgumentDefaultsHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(ArgumentDefaultsHelpFormatter, HelpFormatter);\n\nArgumentDefaultsHelpFormatter.prototype._getHelpString = function (action) {\n  var help = action.help;\n  if (action.help.indexOf('%(defaultValue)s') === -1) {\n    if (action.defaultValue !== c.SUPPRESS) {\n      var defaulting_nargs = [ c.OPTIONAL, c.ZERO_OR_MORE ];\n      if (action.isOptional() || (defaulting_nargs.indexOf(action.nargs) >= 0)) {\n        help += ' (default: %(defaultValue)s)';\n      }\n    }\n  }\n  return help;\n};\n\nmodule.exports.ArgumentDefaultsHelpFormatter = ArgumentDefaultsHelpFormatter;\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which retains any formatting in descriptions.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawDescriptionHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(RawDescriptionHelpFormatter, HelpFormatter);\n\nRawDescriptionHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = text.split('\\n');\n  lines = lines.map(function (line) {\n    return $$.trimEnd(indent + line);\n  });\n  return lines.join('\\n');\n};\nmodule.exports.RawDescriptionHelpFormatter = RawDescriptionHelpFormatter;\n\n/**\n * new RawTextHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})\n *\n * Help message formatter which retains formatting of all help text.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawTextHelpFormatter(options) {\n  RawDescriptionHelpFormatter.call(this, options);\n}\n\nutil.inherits(RawTextHelpFormatter, RawDescriptionHelpFormatter);\n\nRawTextHelpFormatter.prototype._splitLines = function (text) {\n  return text.split('\\n');\n};\n\nmodule.exports.RawTextHelpFormatter = RawTextHelpFormatter;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/argparse/lib/help/added_formatters.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}}],"sources":{"node_modules/argparse/lib/help/added_formatters.js":"'use strict';\n\nvar util    = require('util');\n\n// Constants\nvar c = require('../const');\n\nvar $$ = require('../utils');\nvar HelpFormatter = require('./formatter.js');\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which adds default values to argument help.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction ArgumentDefaultsHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(ArgumentDefaultsHelpFormatter, HelpFormatter);\n\nArgumentDefaultsHelpFormatter.prototype._getHelpString = function (action) {\n  var help = action.help;\n  if (action.help.indexOf('%(defaultValue)s') === -1) {\n    if (action.defaultValue !== c.SUPPRESS) {\n      var defaulting_nargs = [ c.OPTIONAL, c.ZERO_OR_MORE ];\n      if (action.isOptional() || (defaulting_nargs.indexOf(action.nargs) >= 0)) {\n        help += ' (default: %(defaultValue)s)';\n      }\n    }\n  }\n  return help;\n};\n\nmodule.exports.ArgumentDefaultsHelpFormatter = ArgumentDefaultsHelpFormatter;\n\n/**\n * new RawDescriptionHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawDescriptionHelpFormatter, ...})\n *\n * Help message formatter which retains any formatting in descriptions.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawDescriptionHelpFormatter(options) {\n  HelpFormatter.call(this, options);\n}\n\nutil.inherits(RawDescriptionHelpFormatter, HelpFormatter);\n\nRawDescriptionHelpFormatter.prototype._fillText = function (text, width, indent) {\n  var lines = text.split('\\n');\n  lines = lines.map(function (line) {\n    return $$.trimEnd(indent + line);\n  });\n  return lines.join('\\n');\n};\nmodule.exports.RawDescriptionHelpFormatter = RawDescriptionHelpFormatter;\n\n/**\n * new RawTextHelpFormatter(options)\n * new ArgumentParser({formatterClass: argparse.RawTextHelpFormatter, ...})\n *\n * Help message formatter which retains formatting of all help text.\n *\n * Only the name of this class is considered a public API. All the methods\n * provided by the class are considered an implementation detail.\n **/\n\nfunction RawTextHelpFormatter(options) {\n  RawDescriptionHelpFormatter.call(this, options);\n}\n\nutil.inherits(RawTextHelpFormatter, RawDescriptionHelpFormatter);\n\nRawTextHelpFormatter.prototype._splitLines = function (text) {\n  return text.split('\\n');\n};\n\nmodule.exports.RawTextHelpFormatter = RawTextHelpFormatter;\n"},"lineCount":88}},"error":null,"hash":"e646b5fb669b3f5295c187619e7d438b","cacheData":{"env":{}}}