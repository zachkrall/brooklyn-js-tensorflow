{"id":"node_modules/argparse/lib/argument_parser.js","dependencies":[{"name":"/Users/zach/Code/brooklyn-js-tensorflow/package.json","includedInParent":true,"mtime":1574314359001},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/.babelrc","includedInParent":true,"mtime":1574222996221},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/package.json","includedInParent":true,"mtime":1574223218973},{"name":"util","loc":{"line":11,"column":22},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/util/util.js"},{"name":"path","loc":{"line":12,"column":22},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/path-browserify/index.js"},{"name":"sprintf-js","loc":{"line":13,"column":22},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/sprintf-js/src/sprintf.js"},{"name":"./const","loc":{"line":16,"column":16},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/const.js"},{"name":"./utils","loc":{"line":18,"column":17},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/utils.js"},{"name":"./action_container","loc":{"line":20,"column":30},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/action_container.js"},{"name":"./argument/error","loc":{"line":23,"column":34},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument/error.js"},{"name":"./help/formatter","loc":{"line":25,"column":28},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/help/formatter.js"},{"name":"./namespace","loc":{"line":27,"column":24},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/namespace.js"},{"name":"fs","loc":{"line":610,"column":19},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"process","parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument_parser.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n/**\n * class ArgumentParser\n *\n * Object for parsing command line strings into js objects.\n *\n * Inherited from [[ActionContainer]]\n **/\n'use strict';\n\nvar util    = require('util');\nvar format  = require('util').format;\nvar Path    = require('path');\nvar sprintf = require('sprintf-js').sprintf;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\nvar ActionContainer = require('./action_container');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\nvar HelpFormatter = require('./help/formatter');\n\nvar Namespace = require('./namespace');\n\n\n/**\n * new ArgumentParser(options)\n *\n * Create a new ArgumentParser object.\n *\n * ##### Options:\n * - `prog`  The name of the program (default: Path.basename(process.argv[1]))\n * - `usage`  A usage message (default: auto-generated from arguments)\n * - `description`  A description of what the program does\n * - `epilog`  Text following the argument descriptions\n * - `parents`  Parsers whose arguments should be copied into this one\n * - `formatterClass`  HelpFormatter class for printing help messages\n * - `prefixChars`  Characters that prefix optional arguments\n * - `fromfilePrefixChars` Characters that prefix files containing additional arguments\n * - `argumentDefault`  The default value for all arguments\n * - `addHelp`  Add a -h/-help option\n * - `conflictHandler`  Specifies how to handle conflicting argument names\n * - `debug`  Enable debug mode. Argument errors throw exception in\n *   debug mode and process.exit in normal. Used for development and\n *   testing (default: false)\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#argumentparser-objects\n **/\nfunction ArgumentParser(options) {\n  if (!(this instanceof ArgumentParser)) {\n    return new ArgumentParser(options);\n  }\n  var self = this;\n  options = options || {};\n\n  options.description = (options.description || null);\n  options.argumentDefault = (options.argumentDefault || null);\n  options.prefixChars = (options.prefixChars || '-');\n  options.conflictHandler = (options.conflictHandler || 'error');\n  ActionContainer.call(this, options);\n\n  options.addHelp = typeof options.addHelp === 'undefined' || !!options.addHelp;\n  options.parents = options.parents || [];\n  // default program name\n  options.prog = (options.prog || Path.basename(process.argv[1]));\n  this.prog = options.prog;\n  this.usage = options.usage;\n  this.epilog = options.epilog;\n  this.version = options.version;\n\n  this.debug = (options.debug === true);\n\n  this.formatterClass = (options.formatterClass || HelpFormatter);\n  this.fromfilePrefixChars = options.fromfilePrefixChars || null;\n  this._positionals = this.addArgumentGroup({ title: 'Positional arguments' });\n  this._optionals = this.addArgumentGroup({ title: 'Optional arguments' });\n  this._subparsers = null;\n\n  // register types\n  function FUNCTION_IDENTITY(o) {\n    return o;\n  }\n  this.register('type', 'auto', FUNCTION_IDENTITY);\n  this.register('type', null, FUNCTION_IDENTITY);\n  this.register('type', 'int', function (x) {\n    var result = parseInt(x, 10);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid integer.');\n    }\n    return result;\n  });\n  this.register('type', 'float', function (x) {\n    var result = parseFloat(x);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid float.');\n    }\n    return result;\n  });\n  this.register('type', 'string', function (x) {\n    return '' + x;\n  });\n\n  // add help and version arguments if necessary\n  var defaultPrefix = (this.prefixChars.indexOf('-') > -1) ? '-' : this.prefixChars[0];\n  if (options.addHelp) {\n    this.addArgument(\n      [ defaultPrefix + 'h', defaultPrefix + defaultPrefix + 'help' ],\n      {\n        action: 'help',\n        defaultValue: c.SUPPRESS,\n        help: 'Show this help message and exit.'\n      }\n    );\n  }\n  if (typeof this.version !== 'undefined') {\n    this.addArgument(\n      [ defaultPrefix + 'v', defaultPrefix + defaultPrefix + 'version' ],\n      {\n        action: 'version',\n        version: this.version,\n        defaultValue: c.SUPPRESS,\n        help: \"Show program's version number and exit.\"\n      }\n    );\n  }\n\n  // add parent arguments and defaults\n  options.parents.forEach(function (parent) {\n    self._addContainerActions(parent);\n    if (typeof parent._defaults !== 'undefined') {\n      for (var defaultKey in parent._defaults) {\n        if (parent._defaults.hasOwnProperty(defaultKey)) {\n          self._defaults[defaultKey] = parent._defaults[defaultKey];\n        }\n      }\n    }\n  });\n}\n\nutil.inherits(ArgumentParser, ActionContainer);\n\n/**\n * ArgumentParser#addSubparsers(options) -> [[ActionSubparsers]]\n * - options (object): hash of options see [[ActionSubparsers.new]]\n *\n * See also [subcommands][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#sub-commands\n **/\nArgumentParser.prototype.addSubparsers = function (options) {\n  if (this._subparsers) {\n    this.error('Cannot have multiple subparser arguments.');\n  }\n\n  options = options || {};\n  options.debug = (this.debug === true);\n  options.optionStrings = [];\n  options.parserClass = (options.parserClass || ArgumentParser);\n\n\n  if (!!options.title || !!options.description) {\n\n    this._subparsers = this.addArgumentGroup({\n      title: (options.title || 'subcommands'),\n      description: options.description\n    });\n    delete options.title;\n    delete options.description;\n\n  } else {\n    this._subparsers = this._positionals;\n  }\n\n  // prog defaults to the usage message of this parser, skipping\n  // optional arguments and with no \"usage:\" prefix\n  if (!options.prog) {\n    var formatter = this._getFormatter();\n    var positionals = this._getPositionalActions();\n    var groups = this._mutuallyExclusiveGroups;\n    formatter.addUsage(this.usage, positionals, groups, '');\n    options.prog = formatter.formatHelp().trim();\n  }\n\n  // create the parsers action and add it to the positionals list\n  var ParsersClass = this._popActionClass(options, 'parsers');\n  var action = new ParsersClass(options);\n  this._subparsers._addAction(action);\n\n  // return the created parsers action\n  return action;\n};\n\nArgumentParser.prototype._addAction = function (action) {\n  if (action.isOptional()) {\n    this._optionals._addAction(action);\n  } else {\n    this._positionals._addAction(action);\n  }\n  return action;\n};\n\nArgumentParser.prototype._getOptionalActions = function () {\n  return this._actions.filter(function (action) {\n    return action.isOptional();\n  });\n};\n\nArgumentParser.prototype._getPositionalActions = function () {\n  return this._actions.filter(function (action) {\n    return action.isPositional();\n  });\n};\n\n\n/**\n * ArgumentParser#parseArgs(args, namespace) -> Namespace|Object\n * - args (array): input elements\n * - namespace (Namespace|Object): result object\n *\n * Parsed args and throws error if some arguments are not recognized\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#the-parse-args-method\n **/\nArgumentParser.prototype.parseArgs = function (args, namespace) {\n  var argv;\n  var result = this.parseKnownArgs(args, namespace);\n\n  args = result[0];\n  argv = result[1];\n  if (argv && argv.length > 0) {\n    this.error(\n      format('Unrecognized arguments: %s.', argv.join(' '))\n    );\n  }\n  return args;\n};\n\n/**\n * ArgumentParser#parseKnownArgs(args, namespace) -> array\n * - args (array): input options\n * - namespace (Namespace|Object): result object\n *\n * Parse known arguments and return tuple of result object\n * and unknown args\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#partial-parsing\n **/\nArgumentParser.prototype.parseKnownArgs = function (args, namespace) {\n  var self = this;\n\n  // args default to the system args\n  args = args || process.argv.slice(2);\n\n  // default Namespace built from parser defaults\n  namespace = namespace || new Namespace();\n\n  self._actions.forEach(function (action) {\n    if (action.dest !== c.SUPPRESS) {\n      if (!$$.has(namespace, action.dest)) {\n        if (action.defaultValue !== c.SUPPRESS) {\n          var defaultValue = action.defaultValue;\n          if (typeof action.defaultValue === 'string') {\n            defaultValue = self._getValue(action, defaultValue);\n          }\n          namespace[action.dest] = defaultValue;\n        }\n      }\n    }\n  });\n\n  Object.keys(self._defaults).forEach(function (dest) {\n    namespace[dest] = self._defaults[dest];\n  });\n\n  // parse the arguments and exit if there are any errors\n  try {\n    var res = this._parseKnownArgs(args, namespace);\n\n    namespace = res[0];\n    args = res[1];\n    if ($$.has(namespace, c._UNRECOGNIZED_ARGS_ATTR)) {\n      args = $$.arrayUnion(args, namespace[c._UNRECOGNIZED_ARGS_ATTR]);\n      delete namespace[c._UNRECOGNIZED_ARGS_ATTR];\n    }\n    return [ namespace, args ];\n  } catch (e) {\n    this.error(e);\n  }\n};\n\nArgumentParser.prototype._parseKnownArgs = function (argStrings, namespace) {\n  var self = this;\n\n  var extras = [];\n\n  // replace arg strings that are file references\n  if (this.fromfilePrefixChars !== null) {\n    argStrings = this._readArgsFromFiles(argStrings);\n  }\n  // map all mutually exclusive arguments to the other arguments\n  // they can't occur with\n  // Python has 'conflicts = action_conflicts.setdefault(mutex_action, [])'\n  // though I can't conceive of a way in which an action could be a member\n  // of two different mutually exclusive groups.\n\n  function actionHash(action) {\n    // some sort of hashable key for this action\n    // action itself cannot be a key in actionConflicts\n    // I think getName() (join of optionStrings) is unique enough\n    return action.getName();\n  }\n\n  var conflicts, key;\n  var actionConflicts = {};\n\n  this._mutuallyExclusiveGroups.forEach(function (mutexGroup) {\n    mutexGroup._groupActions.forEach(function (mutexAction, i, groupActions) {\n      key = actionHash(mutexAction);\n      if (!$$.has(actionConflicts, key)) {\n        actionConflicts[key] = [];\n      }\n      conflicts = actionConflicts[key];\n      conflicts.push.apply(conflicts, groupActions.slice(0, i));\n      conflicts.push.apply(conflicts, groupActions.slice(i + 1));\n    });\n  });\n\n  // find all option indices, and determine the arg_string_pattern\n  // which has an 'O' if there is an option at an index,\n  // an 'A' if there is an argument, or a '-' if there is a '--'\n  var optionStringIndices = {};\n\n  var argStringPatternParts = [];\n\n  argStrings.forEach(function (argString, argStringIndex) {\n    if (argString === '--') {\n      argStringPatternParts.push('-');\n      while (argStringIndex < argStrings.length) {\n        argStringPatternParts.push('A');\n        argStringIndex++;\n      }\n    } else {\n      // otherwise, add the arg to the arg strings\n      // and note the index if it was an option\n      var pattern;\n      var optionTuple = self._parseOptional(argString);\n      if (!optionTuple) {\n        pattern = 'A';\n      } else {\n        optionStringIndices[argStringIndex] = optionTuple;\n        pattern = 'O';\n      }\n      argStringPatternParts.push(pattern);\n    }\n  });\n  var argStringsPattern = argStringPatternParts.join('');\n\n  var seenActions = [];\n  var seenNonDefaultActions = [];\n\n\n  function takeAction(action, argumentStrings, optionString) {\n    seenActions.push(action);\n    var argumentValues = self._getValues(action, argumentStrings);\n\n    // error if this argument is not allowed with other previously\n    // seen arguments, assuming that actions that use the default\n    // value don't really count as \"present\"\n    if (argumentValues !== action.defaultValue) {\n      seenNonDefaultActions.push(action);\n      if (actionConflicts[actionHash(action)]) {\n        actionConflicts[actionHash(action)].forEach(function (actionConflict) {\n          if (seenNonDefaultActions.indexOf(actionConflict) >= 0) {\n            throw argumentErrorHelper(\n              action,\n              format('Not allowed with argument \"%s\".', actionConflict.getName())\n            );\n          }\n        });\n      }\n    }\n\n    if (argumentValues !== c.SUPPRESS) {\n      action.call(self, namespace, argumentValues, optionString);\n    }\n  }\n\n  function consumeOptional(startIndex) {\n    // get the optional identified at this index\n    var optionTuple = optionStringIndices[startIndex];\n    var action = optionTuple[0];\n    var optionString = optionTuple[1];\n    var explicitArg = optionTuple[2];\n\n    // identify additional optionals in the same arg string\n    // (e.g. -xyz is the same as -x -y -z if no args are required)\n    var actionTuples = [];\n\n    var args, argCount, start, stop;\n\n    for (;;) {\n      if (!action) {\n        extras.push(argStrings[startIndex]);\n        return startIndex + 1;\n      }\n      if (explicitArg) {\n        argCount = self._matchArgument(action, 'A');\n\n        // if the action is a single-dash option and takes no\n        // arguments, try to parse more single-dash options out\n        // of the tail of the option string\n        var chars = self.prefixChars;\n        if (argCount === 0 && chars.indexOf(optionString[1]) < 0) {\n          actionTuples.push([ action, [], optionString ]);\n          optionString = optionString[0] + explicitArg[0];\n          var newExplicitArg = explicitArg.slice(1) || null;\n          var optionalsMap = self._optionStringActions;\n\n          if (Object.keys(optionalsMap).indexOf(optionString) >= 0) {\n            action = optionalsMap[optionString];\n            explicitArg = newExplicitArg;\n          } else {\n            throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));\n          }\n        } else if (argCount === 1) {\n          // if the action expect exactly one argument, we've\n          // successfully matched the option; exit the loop\n          stop = startIndex + 1;\n          args = [ explicitArg ];\n          actionTuples.push([ action, args, optionString ]);\n          break;\n        } else {\n          // error if a double-dash option did not use the\n          // explicit argument\n          throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));\n        }\n      } else {\n        // if there is no explicit argument, try to match the\n        // optional's string arguments with the following strings\n        // if successful, exit the loop\n\n        start = startIndex + 1;\n        var selectedPatterns = argStringsPattern.substr(start);\n\n        argCount = self._matchArgument(action, selectedPatterns);\n        stop = start + argCount;\n\n\n        args = argStrings.slice(start, stop);\n\n        actionTuples.push([ action, args, optionString ]);\n        break;\n      }\n\n    }\n\n    // add the Optional to the list and return the index at which\n    // the Optional's string args stopped\n    if (actionTuples.length < 1) {\n      throw new Error('length should be > 0');\n    }\n    for (var i = 0; i < actionTuples.length; i++) {\n      takeAction.apply(self, actionTuples[i]);\n    }\n    return stop;\n  }\n\n  // the list of Positionals left to be parsed; this is modified\n  // by consume_positionals()\n  var positionals = self._getPositionalActions();\n\n  function consumePositionals(startIndex) {\n    // match as many Positionals as possible\n    var selectedPattern = argStringsPattern.substr(startIndex);\n    var argCounts = self._matchArgumentsPartial(positionals, selectedPattern);\n\n    // slice off the appropriate arg strings for each Positional\n    // and add the Positional and its args to the list\n    for (var i = 0; i < positionals.length; i++) {\n      var action = positionals[i];\n      var argCount = argCounts[i];\n      if (typeof argCount === 'undefined') {\n        continue;\n      }\n      var args = argStrings.slice(startIndex, startIndex + argCount);\n\n      startIndex += argCount;\n      takeAction(action, args);\n    }\n\n    // slice off the Positionals that we just parsed and return the\n    // index at which the Positionals' string args stopped\n    positionals = positionals.slice(argCounts.length);\n    return startIndex;\n  }\n\n  // consume Positionals and Optionals alternately, until we have\n  // passed the last option string\n  var startIndex = 0;\n  var position;\n\n  var maxOptionStringIndex = -1;\n\n  Object.keys(optionStringIndices).forEach(function (position) {\n    maxOptionStringIndex = Math.max(maxOptionStringIndex, parseInt(position, 10));\n  });\n\n  var positionalsEndIndex, nextOptionStringIndex;\n\n  while (startIndex <= maxOptionStringIndex) {\n    // consume any Positionals preceding the next option\n    nextOptionStringIndex = null;\n    for (position in optionStringIndices) {\n      if (!optionStringIndices.hasOwnProperty(position)) { continue; }\n\n      position = parseInt(position, 10);\n      if (position >= startIndex) {\n        if (nextOptionStringIndex !== null) {\n          nextOptionStringIndex = Math.min(nextOptionStringIndex, position);\n        } else {\n          nextOptionStringIndex = position;\n        }\n      }\n    }\n\n    if (startIndex !== nextOptionStringIndex) {\n      positionalsEndIndex = consumePositionals(startIndex);\n      // only try to parse the next optional if we didn't consume\n      // the option string during the positionals parsing\n      if (positionalsEndIndex > startIndex) {\n        startIndex = positionalsEndIndex;\n        continue;\n      } else {\n        startIndex = positionalsEndIndex;\n      }\n    }\n\n    // if we consumed all the positionals we could and we're not\n    // at the index of an option string, there were extra arguments\n    if (!optionStringIndices[startIndex]) {\n      var strings = argStrings.slice(startIndex, nextOptionStringIndex);\n      extras = extras.concat(strings);\n      startIndex = nextOptionStringIndex;\n    }\n    // consume the next optional and any arguments for it\n    startIndex = consumeOptional(startIndex);\n  }\n\n  // consume any positionals following the last Optional\n  var stopIndex = consumePositionals(startIndex);\n\n  // if we didn't consume all the argument strings, there were extras\n  extras = extras.concat(argStrings.slice(stopIndex));\n\n  // if we didn't use all the Positional objects, there were too few\n  // arg strings supplied.\n  if (positionals.length > 0) {\n    self.error('too few arguments');\n  }\n\n  // make sure all required actions were present\n  self._actions.forEach(function (action) {\n    if (action.required) {\n      if (seenActions.indexOf(action) < 0) {\n        self.error(format('Argument \"%s\" is required', action.getName()));\n      }\n    }\n  });\n\n  // make sure all required groups have one option present\n  var actionUsed = false;\n  self._mutuallyExclusiveGroups.forEach(function (group) {\n    if (group.required) {\n      actionUsed = group._groupActions.some(function (action) {\n        return seenNonDefaultActions.indexOf(action) !== -1;\n      });\n\n      // if no actions were used, report the error\n      if (!actionUsed) {\n        var names = [];\n        group._groupActions.forEach(function (action) {\n          if (action.help !== c.SUPPRESS) {\n            names.push(action.getName());\n          }\n        });\n        names = names.join(' ');\n        var msg = 'one of the arguments ' + names + ' is required';\n        self.error(msg);\n      }\n    }\n  });\n\n  // return the updated namespace and the extra arguments\n  return [ namespace, extras ];\n};\n\nArgumentParser.prototype._readArgsFromFiles = function (argStrings) {\n  // expand arguments referencing files\n  var self = this;\n  var fs = require('fs');\n  var newArgStrings = [];\n  argStrings.forEach(function (argString) {\n    if (self.fromfilePrefixChars.indexOf(argString[0]) < 0) {\n      // for regular arguments, just add them back into the list\n      newArgStrings.push(argString);\n    } else {\n      // replace arguments referencing files with the file content\n      try {\n        var argstrs = [];\n        var filename = argString.slice(1);\n        var content = fs.readFileSync(filename, 'utf8');\n        content = content.trim().split('\\n');\n        content.forEach(function (argLine) {\n          self.convertArgLineToArgs(argLine).forEach(function (arg) {\n            argstrs.push(arg);\n          });\n          argstrs = self._readArgsFromFiles(argstrs);\n        });\n        newArgStrings.push.apply(newArgStrings, argstrs);\n      } catch (error) {\n        return self.error(error.message);\n      }\n    }\n  });\n  return newArgStrings;\n};\n\nArgumentParser.prototype.convertArgLineToArgs = function (argLine) {\n  return [ argLine ];\n};\n\nArgumentParser.prototype._matchArgument = function (action, regexpArgStrings) {\n\n  // match the pattern for this action to the arg strings\n  var regexpNargs = new RegExp('^' + this._getNargsPattern(action));\n  var matches = regexpArgStrings.match(regexpNargs);\n  var message;\n\n  // throw an exception if we weren't able to find a match\n  if (!matches) {\n    switch (action.nargs) {\n      /*eslint-disable no-undefined*/\n      case undefined:\n      case null:\n        message = 'Expected one argument.';\n        break;\n      case c.OPTIONAL:\n        message = 'Expected at most one argument.';\n        break;\n      case c.ONE_OR_MORE:\n        message = 'Expected at least one argument.';\n        break;\n      default:\n        message = 'Expected %s argument(s)';\n    }\n\n    throw argumentErrorHelper(\n      action,\n      format(message, action.nargs)\n    );\n  }\n  // return the number of arguments matched\n  return matches[1].length;\n};\n\nArgumentParser.prototype._matchArgumentsPartial = function (actions, regexpArgStrings) {\n  // progressively shorten the actions list by slicing off the\n  // final actions until we find a match\n  var self = this;\n  var result = [];\n  var actionSlice, pattern, matches;\n  var i, j;\n\n  function getLength(string) {\n    return string.length;\n  }\n\n  for (i = actions.length; i > 0; i--) {\n    pattern = '';\n    actionSlice = actions.slice(0, i);\n    for (j = 0; j < actionSlice.length; j++) {\n      pattern += self._getNargsPattern(actionSlice[j]);\n    }\n\n    pattern = new RegExp('^' + pattern);\n    matches = regexpArgStrings.match(pattern);\n\n    if (matches && matches.length > 0) {\n      // need only groups\n      matches = matches.splice(1);\n      result = result.concat(matches.map(getLength));\n      break;\n    }\n  }\n\n  // return the list of arg string counts\n  return result;\n};\n\nArgumentParser.prototype._parseOptional = function (argString) {\n  var action, optionString, argExplicit, optionTuples;\n\n  // if it's an empty string, it was meant to be a positional\n  if (!argString) {\n    return null;\n  }\n\n  // if it doesn't start with a prefix, it was meant to be positional\n  if (this.prefixChars.indexOf(argString[0]) < 0) {\n    return null;\n  }\n\n  // if the option string is present in the parser, return the action\n  if (this._optionStringActions[argString]) {\n    return [ this._optionStringActions[argString], argString, null ];\n  }\n\n  // if it's just a single character, it was meant to be positional\n  if (argString.length === 1) {\n    return null;\n  }\n\n  // if the option string before the \"=\" is present, return the action\n  if (argString.indexOf('=') >= 0) {\n    optionString = argString.split('=', 1)[0];\n    argExplicit = argString.slice(optionString.length + 1);\n\n    if (this._optionStringActions[optionString]) {\n      action = this._optionStringActions[optionString];\n      return [ action, optionString, argExplicit ];\n    }\n  }\n\n  // search through all possible prefixes of the option string\n  // and all actions in the parser for possible interpretations\n  optionTuples = this._getOptionTuples(argString);\n\n  // if multiple actions match, the option string was ambiguous\n  if (optionTuples.length > 1) {\n    var optionStrings = optionTuples.map(function (optionTuple) {\n      return optionTuple[1];\n    });\n    this.error(format(\n          'Ambiguous option: \"%s\" could match %s.',\n          argString, optionStrings.join(', ')\n    ));\n  // if exactly one action matched, this segmentation is good,\n  // so return the parsed action\n  } else if (optionTuples.length === 1) {\n    return optionTuples[0];\n  }\n\n  // if it was not found as an option, but it looks like a negative\n  // number, it was meant to be positional\n  // unless there are negative-number-like options\n  if (argString.match(this._regexpNegativeNumber)) {\n    if (!this._hasNegativeNumberOptionals.some(Boolean)) {\n      return null;\n    }\n  }\n  // if it contains a space, it was meant to be a positional\n  if (argString.search(' ') >= 0) {\n    return null;\n  }\n\n  // it was meant to be an optional but there is no such option\n  // in this parser (though it might be a valid option in a subparser)\n  return [ null, argString, null ];\n};\n\nArgumentParser.prototype._getOptionTuples = function (optionString) {\n  var result = [];\n  var chars = this.prefixChars;\n  var optionPrefix;\n  var argExplicit;\n  var action;\n  var actionOptionString;\n\n  // option strings starting with two prefix characters are only split at\n  // the '='\n  if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) >= 0) {\n    if (optionString.indexOf('=') >= 0) {\n      var optionStringSplit = optionString.split('=', 1);\n\n      optionPrefix = optionStringSplit[0];\n      argExplicit = optionStringSplit[1];\n    } else {\n      optionPrefix = optionString;\n      argExplicit = null;\n    }\n\n    for (actionOptionString in this._optionStringActions) {\n      if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        action = this._optionStringActions[actionOptionString];\n        result.push([ action, actionOptionString, argExplicit ]);\n      }\n    }\n\n  // single character options can be concatenated with their arguments\n  // but multiple character options always have to have their argument\n  // separate\n  } else if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) < 0) {\n    optionPrefix = optionString;\n    argExplicit = null;\n    var optionPrefixShort = optionString.substr(0, 2);\n    var argExplicitShort = optionString.substr(2);\n\n    for (actionOptionString in this._optionStringActions) {\n      if (!$$.has(this._optionStringActions, actionOptionString)) continue;\n\n      action = this._optionStringActions[actionOptionString];\n      if (actionOptionString === optionPrefixShort) {\n        result.push([ action, actionOptionString, argExplicitShort ]);\n      } else if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        result.push([ action, actionOptionString, argExplicit ]);\n      }\n    }\n\n  // shouldn't ever get here\n  } else {\n    throw new Error(format('Unexpected option string: %s.', optionString));\n  }\n  // return the collected option tuples\n  return result;\n};\n\nArgumentParser.prototype._getNargsPattern = function (action) {\n  // in all examples below, we have to allow for '--' args\n  // which are represented as '-' in the pattern\n  var regexpNargs;\n\n  switch (action.nargs) {\n    // the default (null) is assumed to be a single argument\n    case undefined:\n    case null:\n      regexpNargs = '(-*A-*)';\n      break;\n    // allow zero or more arguments\n    case c.OPTIONAL:\n      regexpNargs = '(-*A?-*)';\n      break;\n    // allow zero or more arguments\n    case c.ZERO_OR_MORE:\n      regexpNargs = '(-*[A-]*)';\n      break;\n    // allow one or more arguments\n    case c.ONE_OR_MORE:\n      regexpNargs = '(-*A[A-]*)';\n      break;\n    // allow any number of options or arguments\n    case c.REMAINDER:\n      regexpNargs = '([-AO]*)';\n      break;\n    // allow one argument followed by any number of options or arguments\n    case c.PARSER:\n      regexpNargs = '(-*A[-AO]*)';\n      break;\n    // all others should be integers\n    default:\n      regexpNargs = '(-*' + $$.repeat('-*A', action.nargs) + '-*)';\n  }\n\n  // if this is an optional action, -- is not allowed\n  if (action.isOptional()) {\n    regexpNargs = regexpNargs.replace(/-\\*/g, '');\n    regexpNargs = regexpNargs.replace(/-/g, '');\n  }\n\n  // return the pattern\n  return regexpNargs;\n};\n\n//\n// Value conversion methods\n//\n\nArgumentParser.prototype._getValues = function (action, argStrings) {\n  var self = this;\n\n  // for everything but PARSER args, strip out '--'\n  if (action.nargs !== c.PARSER && action.nargs !== c.REMAINDER) {\n    argStrings = argStrings.filter(function (arrayElement) {\n      return arrayElement !== '--';\n    });\n  }\n\n  var value, argString;\n\n  // optional argument produces a default when not present\n  if (argStrings.length === 0 && action.nargs === c.OPTIONAL) {\n\n    value = (action.isOptional()) ? action.constant : action.defaultValue;\n\n    if (typeof (value) === 'string') {\n      value = this._getValue(action, value);\n      this._checkValue(action, value);\n    }\n\n  // when nargs='*' on a positional, if there were no command-line\n  // args, use the default if it is anything other than None\n  } else if (argStrings.length === 0 && action.nargs === c.ZERO_OR_MORE &&\n    action.optionStrings.length === 0) {\n\n    value = (action.defaultValue || argStrings);\n    this._checkValue(action, value);\n\n  // single argument or optional argument produces a single value\n  } else if (argStrings.length === 1 &&\n        (!action.nargs || action.nargs === c.OPTIONAL)) {\n\n    argString = argStrings[0];\n    value = this._getValue(action, argString);\n    this._checkValue(action, value);\n\n  // REMAINDER arguments convert all values, checking none\n  } else if (action.nargs === c.REMAINDER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n\n  // PARSER arguments convert all values, but check only the first\n  } else if (action.nargs === c.PARSER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    this._checkValue(action, value[0]);\n\n  // all other types of nargs produce a list\n  } else {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    value.forEach(function (v) {\n      self._checkValue(action, v);\n    });\n  }\n\n  // return the converted value\n  return value;\n};\n\nArgumentParser.prototype._getValue = function (action, argString) {\n  var result;\n\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    var message = format('%s is not callable', typeFunction);\n    throw argumentErrorHelper(action, message);\n  }\n\n  // convert the value to the appropriate type\n  try {\n    result = typeFunction(argString);\n\n    // ArgumentTypeErrors indicate errors\n    // If action.type is not a registered string, it is a function\n    // Try to deduce its name for inclusion in the error message\n    // Failing that, include the error message it raised.\n  } catch (e) {\n    var name = null;\n    if (typeof action.type === 'string') {\n      name = action.type;\n    } else {\n      name = action.type.name || action.type.displayName || '<function>';\n    }\n    var msg = format('Invalid %s value: %s', name, argString);\n    if (name === '<function>') { msg += '\\n' + e.message; }\n    throw argumentErrorHelper(action, msg);\n  }\n  // return the converted value\n  return result;\n};\n\nArgumentParser.prototype._checkValue = function (action, value) {\n  // converted value must be one of the choices (if specified)\n  var choices = action.choices;\n  if (choices) {\n    // choise for argument can by array or string\n    if ((typeof choices === 'string' || Array.isArray(choices)) &&\n        choices.indexOf(value) !== -1) {\n      return;\n    }\n    // choise for subparsers can by only hash\n    if (typeof choices === 'object' && !Array.isArray(choices) && choices[value]) {\n      return;\n    }\n\n    if (typeof choices === 'string') {\n      choices = choices.split('').join(', ');\n    } else if (Array.isArray(choices)) {\n      choices =  choices.join(', ');\n    } else {\n      choices =  Object.keys(choices).join(', ');\n    }\n    var message = format('Invalid choice: %s (choose from [%s])', value, choices);\n    throw argumentErrorHelper(action, message);\n  }\n};\n\n//\n// Help formatting methods\n//\n\n/**\n * ArgumentParser#formatUsage -> string\n *\n * Return usage string\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.formatUsage = function () {\n  var formatter = this._getFormatter();\n  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);\n  return formatter.formatHelp();\n};\n\n/**\n * ArgumentParser#formatHelp -> string\n *\n * Return help\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.formatHelp = function () {\n  var formatter = this._getFormatter();\n\n  // usage\n  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);\n\n  // description\n  formatter.addText(this.description);\n\n  // positionals, optionals and user-defined groups\n  this._actionGroups.forEach(function (actionGroup) {\n    formatter.startSection(actionGroup.title);\n    formatter.addText(actionGroup.description);\n    formatter.addArguments(actionGroup._groupActions);\n    formatter.endSection();\n  });\n\n  // epilog\n  formatter.addText(this.epilog);\n\n  // determine help from format above\n  return formatter.formatHelp();\n};\n\nArgumentParser.prototype._getFormatter = function () {\n  var FormatterClass = this.formatterClass;\n  var formatter = new FormatterClass({ prog: this.prog });\n  return formatter;\n};\n\n//\n//  Print functions\n//\n\n/**\n * ArgumentParser#printUsage() -> Void\n *\n * Print usage\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.printUsage = function () {\n  this._printMessage(this.formatUsage());\n};\n\n/**\n * ArgumentParser#printHelp() -> Void\n *\n * Print help\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.printHelp = function () {\n  this._printMessage(this.formatHelp());\n};\n\nArgumentParser.prototype._printMessage = function (message, stream) {\n  if (!stream) {\n    stream = process.stdout;\n  }\n  if (message) {\n    stream.write('' + message);\n  }\n};\n\n//\n//  Exit functions\n//\n\n/**\n * ArgumentParser#exit(status=0, message) -> Void\n * - status (int): exit status\n * - message (string): message\n *\n * Print message in stderr/stdout and exit program\n **/\nArgumentParser.prototype.exit = function (status, message) {\n  if (message) {\n    if (status === 0) {\n      this._printMessage(message);\n    } else {\n      this._printMessage(message, process.stderr);\n    }\n  }\n\n  process.exit(status);\n};\n\n/**\n * ArgumentParser#error(message) -> Void\n * - err (Error|string): message\n *\n * Error method Prints a usage message incorporating the message to stderr and\n * exits. If you override this in a subclass,\n * it should not return -- it should\n * either exit or throw an exception.\n *\n **/\nArgumentParser.prototype.error = function (err) {\n  var message;\n  if (err instanceof Error) {\n    if (this.debug === true) {\n      throw err;\n    }\n    message = err.message;\n  } else {\n    message = err;\n  }\n  var msg = format('%s: error: %s', this.prog, message) + c.EOL;\n\n  if (this.debug === true) {\n    throw new Error(msg);\n  }\n\n  this.printUsage(process.stderr);\n\n  return this.exit(2, msg);\n};\n\nmodule.exports = ArgumentParser;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":346,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":347,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":348,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":349,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":350,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":351,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":352,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":353,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":354,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":355,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":356,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":357,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":358,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":359,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":360,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":361,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":362,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":363,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":364,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":365,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":366,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":367,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":368,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":369,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":370,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":371,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":372,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":373,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":374,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":375,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":376,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":377,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":378,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":379,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":380,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":381,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":382,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":383,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":384,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":385,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":386,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":387,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":388,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":389,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":390,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":391,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":392,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":393,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":394,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":395,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":396,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":397,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":398,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":399,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":400,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":401,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":402,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":403,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":404,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":405,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":406,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":407,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":408,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":409,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":410,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":411,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":412,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":413,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":414,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":415,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":416,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":417,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":418,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":419,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":420,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":421,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":422,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":423,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":424,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":425,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":426,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":427,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":428,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":429,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":430,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":431,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":432,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":433,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":434,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":435,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":436,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":437,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":438,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":439,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":440,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":441,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":442,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":443,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":444,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":445,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":446,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":447,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":448,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":449,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":450,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":451,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":452,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":453,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":454,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":455,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":456,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":457,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":458,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":459,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":460,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":461,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":462,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":463,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":464,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":465,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":466,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":467,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":468,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":469,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":470,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":471,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":472,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":473,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":474,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":475,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":476,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":477,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":478,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":479,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":480,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":481,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":482,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":483,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":484,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":485,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":486,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":487,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":488,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":489,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":490,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":491,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":492,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":493,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":494,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":495,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":496,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":497,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":498,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":499,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":500,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":501,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":502,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":503,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":504,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":505,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":506,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":507,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":508,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":509,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":510,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":511,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":512,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":513,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":514,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":515,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":516,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":517,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":518,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":519,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":520,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":521,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":522,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":523,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":524,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":525,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":526,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":527,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":528,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":529,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":530,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":531,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":532,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":533,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":534,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":535,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":536,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":537,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":538,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":539,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":540,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":541,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":542,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":543,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":544,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":545,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":546,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":547,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":548,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":549,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":550,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":551,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":552,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":553,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":554,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":555,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":556,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":557,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":558,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":559,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":560,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":561,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":562,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":563,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":564,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":565,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":566,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":567,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":568,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":569,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":570,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":571,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":572,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":573,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":574,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":575,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":576,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":577,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":578,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":579,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":580,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":581,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":582,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":583,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":584,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":585,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":586,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":587,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":588,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":589,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":590,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":591,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":592,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":593,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":594,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":595,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":596,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":597,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":598,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":599,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":600,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":601,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":602,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":603,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":604,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":605,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":606,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":607,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":608,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":609,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":610,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":611,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":612,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":613,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":614,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":615,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":616,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":617,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":618,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":619,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":620,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":621,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":622,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":623,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":624,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":625,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":626,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":627,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":628,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":629,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":630,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":631,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":632,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":633,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":634,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":635,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":636,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":637,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":638,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":639,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":640,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":641,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":642,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":643,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":644,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":645,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":646,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":647,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":648,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":649,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":650,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":651,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":652,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":653,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":654,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":655,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":656,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":657,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":658,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":659,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":660,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":661,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":662,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":663,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":664,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":665,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":666,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":667,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":668,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":669,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":670,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":671,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":672,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":673,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":674,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":675,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":676,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":677,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":678,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":679,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":680,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":681,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":682,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":683,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":684,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":685,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":686,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":687,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":688,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":689,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":690,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":691,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":692,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":693,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":694,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":695,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":696,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":697,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":698,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":699,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":700,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":701,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":702,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":703,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":704,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":705,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":706,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":707,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":708,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":709,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":710,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":711,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":712,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":713,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":714,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":715,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":716,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":717,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":718,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":719,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":720,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":721,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":722,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":723,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":724,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":725,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":726,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":727,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":728,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":729,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":730,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":731,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":732,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":733,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":734,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":735,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":736,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":737,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":738,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":739,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":740,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":741,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":742,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":743,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":744,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":745,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":746,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":747,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":748,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":749,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":750,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":751,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":752,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":753,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":754,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":755,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":756,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":757,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":758,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":759,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":760,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":761,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":762,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":763,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":764,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":765,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":766,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":767,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":768,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":769,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":770,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":771,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":772,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":773,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":774,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":775,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":776,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":777,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":778,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":779,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":780,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":781,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":782,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":783,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":784,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":785,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":786,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":787,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":788,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":789,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":790,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":791,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":792,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":793,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":794,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":795,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":796,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":797,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":798,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":799,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":800,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":801,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":802,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":803,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":804,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":805,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":806,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":807,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":808,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":809,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":810,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":811,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":812,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":813,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":814,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":815,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":816,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":817,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":818,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":819,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":820,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":821,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":822,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":823,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":824,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":825,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":826,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":827,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":828,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":829,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":830,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":831,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":832,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":833,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":834,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":835,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":836,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":837,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":838,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":839,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":840,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":841,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":842,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":843,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":844,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":845,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":846,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":847,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":848,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":849,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":850,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":851,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":852,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":853,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":854,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":855,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":856,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":857,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":858,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":859,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":860,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":861,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":862,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":863,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":864,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":865,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":866,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":867,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":868,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":869,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":870,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":871,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":872,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":873,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":874,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":875,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":876,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":877,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":878,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":879,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":880,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":881,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":882,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":883,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":884,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":885,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":886,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":887,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":888,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":889,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":890,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":891,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":892,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":893,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":894,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":895,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":896,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":897,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":898,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":899,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":900,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":901,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":902,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":903,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":904,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":905,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":906,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":907,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":908,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":909,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":910,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":911,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":912,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":913,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":914,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":915,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":916,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":917,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":918,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":919,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":920,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":921,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":922,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":923,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":924,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":925,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":926,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":927,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":928,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":929,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":930,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":931,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":932,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":933,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":934,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":935,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":936,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":937,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":938,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":939,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":940,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":941,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":942,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":943,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":944,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":945,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":946,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":947,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":948,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":949,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":950,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":951,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":952,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":953,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":954,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":955,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":956,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":957,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":958,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":959,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":960,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":961,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":962,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":963,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":964,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":965,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":966,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":967,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":968,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":969,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":970,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":971,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":972,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":973,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":974,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":975,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":976,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":977,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":978,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":979,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":980,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":981,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":982,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":983,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":984,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":985,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":986,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":987,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":988,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":989,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":990,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":991,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":992,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":993,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":994,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":995,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":996,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":997,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":998,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":999,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1000,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1001,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1002,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1003,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1004,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1005,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1006,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1007,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1008,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1009,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1010,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1011,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1012,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1013,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1014,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1015,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1016,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1017,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1018,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1019,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1020,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1021,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1022,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1023,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1024,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1025,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1026,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1027,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1028,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1029,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1030,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1031,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1032,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1033,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1034,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1035,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1036,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1037,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1038,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1039,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1040,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1041,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1042,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1043,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1044,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1045,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1046,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1047,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1048,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1049,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1050,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1051,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1052,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1053,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1054,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1055,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1056,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1057,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1058,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1059,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1060,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1061,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1062,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1063,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1064,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1065,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1066,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1067,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1068,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1069,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1070,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1071,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1072,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1073,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1074,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1075,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1076,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1077,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1078,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1079,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1080,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1081,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1082,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1083,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1084,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1085,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1086,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1087,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1088,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1089,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1090,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1091,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1092,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1093,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1094,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1095,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1096,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1097,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1098,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1099,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1100,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1101,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1102,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1103,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1104,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1105,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1106,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1107,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1108,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1109,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1110,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1111,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1112,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1113,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1114,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1115,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1116,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1117,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1118,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1119,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1120,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1121,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1122,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1123,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1124,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1125,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1126,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1127,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1128,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1129,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1130,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1131,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1132,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1133,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1134,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1135,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1136,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1137,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1138,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1139,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1140,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1141,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1142,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1143,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1144,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1145,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1146,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1147,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1148,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1149,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1150,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1151,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1152,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1153,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1154,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1155,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1156,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1157,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1158,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1159,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1160,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1161,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/argparse/lib/argument_parser.js","original":{"line":1162,"column":0},"generated":{"line":1163,"column":0}}],"sources":{"node_modules/argparse/lib/argument_parser.js":"/**\n * class ArgumentParser\n *\n * Object for parsing command line strings into js objects.\n *\n * Inherited from [[ActionContainer]]\n **/\n'use strict';\n\nvar util    = require('util');\nvar format  = require('util').format;\nvar Path    = require('path');\nvar sprintf = require('sprintf-js').sprintf;\n\n// Constants\nvar c = require('./const');\n\nvar $$ = require('./utils');\n\nvar ActionContainer = require('./action_container');\n\n// Errors\nvar argumentErrorHelper = require('./argument/error');\n\nvar HelpFormatter = require('./help/formatter');\n\nvar Namespace = require('./namespace');\n\n\n/**\n * new ArgumentParser(options)\n *\n * Create a new ArgumentParser object.\n *\n * ##### Options:\n * - `prog`  The name of the program (default: Path.basename(process.argv[1]))\n * - `usage`  A usage message (default: auto-generated from arguments)\n * - `description`  A description of what the program does\n * - `epilog`  Text following the argument descriptions\n * - `parents`  Parsers whose arguments should be copied into this one\n * - `formatterClass`  HelpFormatter class for printing help messages\n * - `prefixChars`  Characters that prefix optional arguments\n * - `fromfilePrefixChars` Characters that prefix files containing additional arguments\n * - `argumentDefault`  The default value for all arguments\n * - `addHelp`  Add a -h/-help option\n * - `conflictHandler`  Specifies how to handle conflicting argument names\n * - `debug`  Enable debug mode. Argument errors throw exception in\n *   debug mode and process.exit in normal. Used for development and\n *   testing (default: false)\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#argumentparser-objects\n **/\nfunction ArgumentParser(options) {\n  if (!(this instanceof ArgumentParser)) {\n    return new ArgumentParser(options);\n  }\n  var self = this;\n  options = options || {};\n\n  options.description = (options.description || null);\n  options.argumentDefault = (options.argumentDefault || null);\n  options.prefixChars = (options.prefixChars || '-');\n  options.conflictHandler = (options.conflictHandler || 'error');\n  ActionContainer.call(this, options);\n\n  options.addHelp = typeof options.addHelp === 'undefined' || !!options.addHelp;\n  options.parents = options.parents || [];\n  // default program name\n  options.prog = (options.prog || Path.basename(process.argv[1]));\n  this.prog = options.prog;\n  this.usage = options.usage;\n  this.epilog = options.epilog;\n  this.version = options.version;\n\n  this.debug = (options.debug === true);\n\n  this.formatterClass = (options.formatterClass || HelpFormatter);\n  this.fromfilePrefixChars = options.fromfilePrefixChars || null;\n  this._positionals = this.addArgumentGroup({ title: 'Positional arguments' });\n  this._optionals = this.addArgumentGroup({ title: 'Optional arguments' });\n  this._subparsers = null;\n\n  // register types\n  function FUNCTION_IDENTITY(o) {\n    return o;\n  }\n  this.register('type', 'auto', FUNCTION_IDENTITY);\n  this.register('type', null, FUNCTION_IDENTITY);\n  this.register('type', 'int', function (x) {\n    var result = parseInt(x, 10);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid integer.');\n    }\n    return result;\n  });\n  this.register('type', 'float', function (x) {\n    var result = parseFloat(x);\n    if (isNaN(result)) {\n      throw new Error(x + ' is not a valid float.');\n    }\n    return result;\n  });\n  this.register('type', 'string', function (x) {\n    return '' + x;\n  });\n\n  // add help and version arguments if necessary\n  var defaultPrefix = (this.prefixChars.indexOf('-') > -1) ? '-' : this.prefixChars[0];\n  if (options.addHelp) {\n    this.addArgument(\n      [ defaultPrefix + 'h', defaultPrefix + defaultPrefix + 'help' ],\n      {\n        action: 'help',\n        defaultValue: c.SUPPRESS,\n        help: 'Show this help message and exit.'\n      }\n    );\n  }\n  if (typeof this.version !== 'undefined') {\n    this.addArgument(\n      [ defaultPrefix + 'v', defaultPrefix + defaultPrefix + 'version' ],\n      {\n        action: 'version',\n        version: this.version,\n        defaultValue: c.SUPPRESS,\n        help: \"Show program's version number and exit.\"\n      }\n    );\n  }\n\n  // add parent arguments and defaults\n  options.parents.forEach(function (parent) {\n    self._addContainerActions(parent);\n    if (typeof parent._defaults !== 'undefined') {\n      for (var defaultKey in parent._defaults) {\n        if (parent._defaults.hasOwnProperty(defaultKey)) {\n          self._defaults[defaultKey] = parent._defaults[defaultKey];\n        }\n      }\n    }\n  });\n}\n\nutil.inherits(ArgumentParser, ActionContainer);\n\n/**\n * ArgumentParser#addSubparsers(options) -> [[ActionSubparsers]]\n * - options (object): hash of options see [[ActionSubparsers.new]]\n *\n * See also [subcommands][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#sub-commands\n **/\nArgumentParser.prototype.addSubparsers = function (options) {\n  if (this._subparsers) {\n    this.error('Cannot have multiple subparser arguments.');\n  }\n\n  options = options || {};\n  options.debug = (this.debug === true);\n  options.optionStrings = [];\n  options.parserClass = (options.parserClass || ArgumentParser);\n\n\n  if (!!options.title || !!options.description) {\n\n    this._subparsers = this.addArgumentGroup({\n      title: (options.title || 'subcommands'),\n      description: options.description\n    });\n    delete options.title;\n    delete options.description;\n\n  } else {\n    this._subparsers = this._positionals;\n  }\n\n  // prog defaults to the usage message of this parser, skipping\n  // optional arguments and with no \"usage:\" prefix\n  if (!options.prog) {\n    var formatter = this._getFormatter();\n    var positionals = this._getPositionalActions();\n    var groups = this._mutuallyExclusiveGroups;\n    formatter.addUsage(this.usage, positionals, groups, '');\n    options.prog = formatter.formatHelp().trim();\n  }\n\n  // create the parsers action and add it to the positionals list\n  var ParsersClass = this._popActionClass(options, 'parsers');\n  var action = new ParsersClass(options);\n  this._subparsers._addAction(action);\n\n  // return the created parsers action\n  return action;\n};\n\nArgumentParser.prototype._addAction = function (action) {\n  if (action.isOptional()) {\n    this._optionals._addAction(action);\n  } else {\n    this._positionals._addAction(action);\n  }\n  return action;\n};\n\nArgumentParser.prototype._getOptionalActions = function () {\n  return this._actions.filter(function (action) {\n    return action.isOptional();\n  });\n};\n\nArgumentParser.prototype._getPositionalActions = function () {\n  return this._actions.filter(function (action) {\n    return action.isPositional();\n  });\n};\n\n\n/**\n * ArgumentParser#parseArgs(args, namespace) -> Namespace|Object\n * - args (array): input elements\n * - namespace (Namespace|Object): result object\n *\n * Parsed args and throws error if some arguments are not recognized\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#the-parse-args-method\n **/\nArgumentParser.prototype.parseArgs = function (args, namespace) {\n  var argv;\n  var result = this.parseKnownArgs(args, namespace);\n\n  args = result[0];\n  argv = result[1];\n  if (argv && argv.length > 0) {\n    this.error(\n      format('Unrecognized arguments: %s.', argv.join(' '))\n    );\n  }\n  return args;\n};\n\n/**\n * ArgumentParser#parseKnownArgs(args, namespace) -> array\n * - args (array): input options\n * - namespace (Namespace|Object): result object\n *\n * Parse known arguments and return tuple of result object\n * and unknown args\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#partial-parsing\n **/\nArgumentParser.prototype.parseKnownArgs = function (args, namespace) {\n  var self = this;\n\n  // args default to the system args\n  args = args || process.argv.slice(2);\n\n  // default Namespace built from parser defaults\n  namespace = namespace || new Namespace();\n\n  self._actions.forEach(function (action) {\n    if (action.dest !== c.SUPPRESS) {\n      if (!$$.has(namespace, action.dest)) {\n        if (action.defaultValue !== c.SUPPRESS) {\n          var defaultValue = action.defaultValue;\n          if (typeof action.defaultValue === 'string') {\n            defaultValue = self._getValue(action, defaultValue);\n          }\n          namespace[action.dest] = defaultValue;\n        }\n      }\n    }\n  });\n\n  Object.keys(self._defaults).forEach(function (dest) {\n    namespace[dest] = self._defaults[dest];\n  });\n\n  // parse the arguments and exit if there are any errors\n  try {\n    var res = this._parseKnownArgs(args, namespace);\n\n    namespace = res[0];\n    args = res[1];\n    if ($$.has(namespace, c._UNRECOGNIZED_ARGS_ATTR)) {\n      args = $$.arrayUnion(args, namespace[c._UNRECOGNIZED_ARGS_ATTR]);\n      delete namespace[c._UNRECOGNIZED_ARGS_ATTR];\n    }\n    return [ namespace, args ];\n  } catch (e) {\n    this.error(e);\n  }\n};\n\nArgumentParser.prototype._parseKnownArgs = function (argStrings, namespace) {\n  var self = this;\n\n  var extras = [];\n\n  // replace arg strings that are file references\n  if (this.fromfilePrefixChars !== null) {\n    argStrings = this._readArgsFromFiles(argStrings);\n  }\n  // map all mutually exclusive arguments to the other arguments\n  // they can't occur with\n  // Python has 'conflicts = action_conflicts.setdefault(mutex_action, [])'\n  // though I can't conceive of a way in which an action could be a member\n  // of two different mutually exclusive groups.\n\n  function actionHash(action) {\n    // some sort of hashable key for this action\n    // action itself cannot be a key in actionConflicts\n    // I think getName() (join of optionStrings) is unique enough\n    return action.getName();\n  }\n\n  var conflicts, key;\n  var actionConflicts = {};\n\n  this._mutuallyExclusiveGroups.forEach(function (mutexGroup) {\n    mutexGroup._groupActions.forEach(function (mutexAction, i, groupActions) {\n      key = actionHash(mutexAction);\n      if (!$$.has(actionConflicts, key)) {\n        actionConflicts[key] = [];\n      }\n      conflicts = actionConflicts[key];\n      conflicts.push.apply(conflicts, groupActions.slice(0, i));\n      conflicts.push.apply(conflicts, groupActions.slice(i + 1));\n    });\n  });\n\n  // find all option indices, and determine the arg_string_pattern\n  // which has an 'O' if there is an option at an index,\n  // an 'A' if there is an argument, or a '-' if there is a '--'\n  var optionStringIndices = {};\n\n  var argStringPatternParts = [];\n\n  argStrings.forEach(function (argString, argStringIndex) {\n    if (argString === '--') {\n      argStringPatternParts.push('-');\n      while (argStringIndex < argStrings.length) {\n        argStringPatternParts.push('A');\n        argStringIndex++;\n      }\n    } else {\n      // otherwise, add the arg to the arg strings\n      // and note the index if it was an option\n      var pattern;\n      var optionTuple = self._parseOptional(argString);\n      if (!optionTuple) {\n        pattern = 'A';\n      } else {\n        optionStringIndices[argStringIndex] = optionTuple;\n        pattern = 'O';\n      }\n      argStringPatternParts.push(pattern);\n    }\n  });\n  var argStringsPattern = argStringPatternParts.join('');\n\n  var seenActions = [];\n  var seenNonDefaultActions = [];\n\n\n  function takeAction(action, argumentStrings, optionString) {\n    seenActions.push(action);\n    var argumentValues = self._getValues(action, argumentStrings);\n\n    // error if this argument is not allowed with other previously\n    // seen arguments, assuming that actions that use the default\n    // value don't really count as \"present\"\n    if (argumentValues !== action.defaultValue) {\n      seenNonDefaultActions.push(action);\n      if (actionConflicts[actionHash(action)]) {\n        actionConflicts[actionHash(action)].forEach(function (actionConflict) {\n          if (seenNonDefaultActions.indexOf(actionConflict) >= 0) {\n            throw argumentErrorHelper(\n              action,\n              format('Not allowed with argument \"%s\".', actionConflict.getName())\n            );\n          }\n        });\n      }\n    }\n\n    if (argumentValues !== c.SUPPRESS) {\n      action.call(self, namespace, argumentValues, optionString);\n    }\n  }\n\n  function consumeOptional(startIndex) {\n    // get the optional identified at this index\n    var optionTuple = optionStringIndices[startIndex];\n    var action = optionTuple[0];\n    var optionString = optionTuple[1];\n    var explicitArg = optionTuple[2];\n\n    // identify additional optionals in the same arg string\n    // (e.g. -xyz is the same as -x -y -z if no args are required)\n    var actionTuples = [];\n\n    var args, argCount, start, stop;\n\n    for (;;) {\n      if (!action) {\n        extras.push(argStrings[startIndex]);\n        return startIndex + 1;\n      }\n      if (explicitArg) {\n        argCount = self._matchArgument(action, 'A');\n\n        // if the action is a single-dash option and takes no\n        // arguments, try to parse more single-dash options out\n        // of the tail of the option string\n        var chars = self.prefixChars;\n        if (argCount === 0 && chars.indexOf(optionString[1]) < 0) {\n          actionTuples.push([ action, [], optionString ]);\n          optionString = optionString[0] + explicitArg[0];\n          var newExplicitArg = explicitArg.slice(1) || null;\n          var optionalsMap = self._optionStringActions;\n\n          if (Object.keys(optionalsMap).indexOf(optionString) >= 0) {\n            action = optionalsMap[optionString];\n            explicitArg = newExplicitArg;\n          } else {\n            throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));\n          }\n        } else if (argCount === 1) {\n          // if the action expect exactly one argument, we've\n          // successfully matched the option; exit the loop\n          stop = startIndex + 1;\n          args = [ explicitArg ];\n          actionTuples.push([ action, args, optionString ]);\n          break;\n        } else {\n          // error if a double-dash option did not use the\n          // explicit argument\n          throw argumentErrorHelper(action, sprintf('ignored explicit argument %r', explicitArg));\n        }\n      } else {\n        // if there is no explicit argument, try to match the\n        // optional's string arguments with the following strings\n        // if successful, exit the loop\n\n        start = startIndex + 1;\n        var selectedPatterns = argStringsPattern.substr(start);\n\n        argCount = self._matchArgument(action, selectedPatterns);\n        stop = start + argCount;\n\n\n        args = argStrings.slice(start, stop);\n\n        actionTuples.push([ action, args, optionString ]);\n        break;\n      }\n\n    }\n\n    // add the Optional to the list and return the index at which\n    // the Optional's string args stopped\n    if (actionTuples.length < 1) {\n      throw new Error('length should be > 0');\n    }\n    for (var i = 0; i < actionTuples.length; i++) {\n      takeAction.apply(self, actionTuples[i]);\n    }\n    return stop;\n  }\n\n  // the list of Positionals left to be parsed; this is modified\n  // by consume_positionals()\n  var positionals = self._getPositionalActions();\n\n  function consumePositionals(startIndex) {\n    // match as many Positionals as possible\n    var selectedPattern = argStringsPattern.substr(startIndex);\n    var argCounts = self._matchArgumentsPartial(positionals, selectedPattern);\n\n    // slice off the appropriate arg strings for each Positional\n    // and add the Positional and its args to the list\n    for (var i = 0; i < positionals.length; i++) {\n      var action = positionals[i];\n      var argCount = argCounts[i];\n      if (typeof argCount === 'undefined') {\n        continue;\n      }\n      var args = argStrings.slice(startIndex, startIndex + argCount);\n\n      startIndex += argCount;\n      takeAction(action, args);\n    }\n\n    // slice off the Positionals that we just parsed and return the\n    // index at which the Positionals' string args stopped\n    positionals = positionals.slice(argCounts.length);\n    return startIndex;\n  }\n\n  // consume Positionals and Optionals alternately, until we have\n  // passed the last option string\n  var startIndex = 0;\n  var position;\n\n  var maxOptionStringIndex = -1;\n\n  Object.keys(optionStringIndices).forEach(function (position) {\n    maxOptionStringIndex = Math.max(maxOptionStringIndex, parseInt(position, 10));\n  });\n\n  var positionalsEndIndex, nextOptionStringIndex;\n\n  while (startIndex <= maxOptionStringIndex) {\n    // consume any Positionals preceding the next option\n    nextOptionStringIndex = null;\n    for (position in optionStringIndices) {\n      if (!optionStringIndices.hasOwnProperty(position)) { continue; }\n\n      position = parseInt(position, 10);\n      if (position >= startIndex) {\n        if (nextOptionStringIndex !== null) {\n          nextOptionStringIndex = Math.min(nextOptionStringIndex, position);\n        } else {\n          nextOptionStringIndex = position;\n        }\n      }\n    }\n\n    if (startIndex !== nextOptionStringIndex) {\n      positionalsEndIndex = consumePositionals(startIndex);\n      // only try to parse the next optional if we didn't consume\n      // the option string during the positionals parsing\n      if (positionalsEndIndex > startIndex) {\n        startIndex = positionalsEndIndex;\n        continue;\n      } else {\n        startIndex = positionalsEndIndex;\n      }\n    }\n\n    // if we consumed all the positionals we could and we're not\n    // at the index of an option string, there were extra arguments\n    if (!optionStringIndices[startIndex]) {\n      var strings = argStrings.slice(startIndex, nextOptionStringIndex);\n      extras = extras.concat(strings);\n      startIndex = nextOptionStringIndex;\n    }\n    // consume the next optional and any arguments for it\n    startIndex = consumeOptional(startIndex);\n  }\n\n  // consume any positionals following the last Optional\n  var stopIndex = consumePositionals(startIndex);\n\n  // if we didn't consume all the argument strings, there were extras\n  extras = extras.concat(argStrings.slice(stopIndex));\n\n  // if we didn't use all the Positional objects, there were too few\n  // arg strings supplied.\n  if (positionals.length > 0) {\n    self.error('too few arguments');\n  }\n\n  // make sure all required actions were present\n  self._actions.forEach(function (action) {\n    if (action.required) {\n      if (seenActions.indexOf(action) < 0) {\n        self.error(format('Argument \"%s\" is required', action.getName()));\n      }\n    }\n  });\n\n  // make sure all required groups have one option present\n  var actionUsed = false;\n  self._mutuallyExclusiveGroups.forEach(function (group) {\n    if (group.required) {\n      actionUsed = group._groupActions.some(function (action) {\n        return seenNonDefaultActions.indexOf(action) !== -1;\n      });\n\n      // if no actions were used, report the error\n      if (!actionUsed) {\n        var names = [];\n        group._groupActions.forEach(function (action) {\n          if (action.help !== c.SUPPRESS) {\n            names.push(action.getName());\n          }\n        });\n        names = names.join(' ');\n        var msg = 'one of the arguments ' + names + ' is required';\n        self.error(msg);\n      }\n    }\n  });\n\n  // return the updated namespace and the extra arguments\n  return [ namespace, extras ];\n};\n\nArgumentParser.prototype._readArgsFromFiles = function (argStrings) {\n  // expand arguments referencing files\n  var self = this;\n  var fs = require('fs');\n  var newArgStrings = [];\n  argStrings.forEach(function (argString) {\n    if (self.fromfilePrefixChars.indexOf(argString[0]) < 0) {\n      // for regular arguments, just add them back into the list\n      newArgStrings.push(argString);\n    } else {\n      // replace arguments referencing files with the file content\n      try {\n        var argstrs = [];\n        var filename = argString.slice(1);\n        var content = fs.readFileSync(filename, 'utf8');\n        content = content.trim().split('\\n');\n        content.forEach(function (argLine) {\n          self.convertArgLineToArgs(argLine).forEach(function (arg) {\n            argstrs.push(arg);\n          });\n          argstrs = self._readArgsFromFiles(argstrs);\n        });\n        newArgStrings.push.apply(newArgStrings, argstrs);\n      } catch (error) {\n        return self.error(error.message);\n      }\n    }\n  });\n  return newArgStrings;\n};\n\nArgumentParser.prototype.convertArgLineToArgs = function (argLine) {\n  return [ argLine ];\n};\n\nArgumentParser.prototype._matchArgument = function (action, regexpArgStrings) {\n\n  // match the pattern for this action to the arg strings\n  var regexpNargs = new RegExp('^' + this._getNargsPattern(action));\n  var matches = regexpArgStrings.match(regexpNargs);\n  var message;\n\n  // throw an exception if we weren't able to find a match\n  if (!matches) {\n    switch (action.nargs) {\n      /*eslint-disable no-undefined*/\n      case undefined:\n      case null:\n        message = 'Expected one argument.';\n        break;\n      case c.OPTIONAL:\n        message = 'Expected at most one argument.';\n        break;\n      case c.ONE_OR_MORE:\n        message = 'Expected at least one argument.';\n        break;\n      default:\n        message = 'Expected %s argument(s)';\n    }\n\n    throw argumentErrorHelper(\n      action,\n      format(message, action.nargs)\n    );\n  }\n  // return the number of arguments matched\n  return matches[1].length;\n};\n\nArgumentParser.prototype._matchArgumentsPartial = function (actions, regexpArgStrings) {\n  // progressively shorten the actions list by slicing off the\n  // final actions until we find a match\n  var self = this;\n  var result = [];\n  var actionSlice, pattern, matches;\n  var i, j;\n\n  function getLength(string) {\n    return string.length;\n  }\n\n  for (i = actions.length; i > 0; i--) {\n    pattern = '';\n    actionSlice = actions.slice(0, i);\n    for (j = 0; j < actionSlice.length; j++) {\n      pattern += self._getNargsPattern(actionSlice[j]);\n    }\n\n    pattern = new RegExp('^' + pattern);\n    matches = regexpArgStrings.match(pattern);\n\n    if (matches && matches.length > 0) {\n      // need only groups\n      matches = matches.splice(1);\n      result = result.concat(matches.map(getLength));\n      break;\n    }\n  }\n\n  // return the list of arg string counts\n  return result;\n};\n\nArgumentParser.prototype._parseOptional = function (argString) {\n  var action, optionString, argExplicit, optionTuples;\n\n  // if it's an empty string, it was meant to be a positional\n  if (!argString) {\n    return null;\n  }\n\n  // if it doesn't start with a prefix, it was meant to be positional\n  if (this.prefixChars.indexOf(argString[0]) < 0) {\n    return null;\n  }\n\n  // if the option string is present in the parser, return the action\n  if (this._optionStringActions[argString]) {\n    return [ this._optionStringActions[argString], argString, null ];\n  }\n\n  // if it's just a single character, it was meant to be positional\n  if (argString.length === 1) {\n    return null;\n  }\n\n  // if the option string before the \"=\" is present, return the action\n  if (argString.indexOf('=') >= 0) {\n    optionString = argString.split('=', 1)[0];\n    argExplicit = argString.slice(optionString.length + 1);\n\n    if (this._optionStringActions[optionString]) {\n      action = this._optionStringActions[optionString];\n      return [ action, optionString, argExplicit ];\n    }\n  }\n\n  // search through all possible prefixes of the option string\n  // and all actions in the parser for possible interpretations\n  optionTuples = this._getOptionTuples(argString);\n\n  // if multiple actions match, the option string was ambiguous\n  if (optionTuples.length > 1) {\n    var optionStrings = optionTuples.map(function (optionTuple) {\n      return optionTuple[1];\n    });\n    this.error(format(\n          'Ambiguous option: \"%s\" could match %s.',\n          argString, optionStrings.join(', ')\n    ));\n  // if exactly one action matched, this segmentation is good,\n  // so return the parsed action\n  } else if (optionTuples.length === 1) {\n    return optionTuples[0];\n  }\n\n  // if it was not found as an option, but it looks like a negative\n  // number, it was meant to be positional\n  // unless there are negative-number-like options\n  if (argString.match(this._regexpNegativeNumber)) {\n    if (!this._hasNegativeNumberOptionals.some(Boolean)) {\n      return null;\n    }\n  }\n  // if it contains a space, it was meant to be a positional\n  if (argString.search(' ') >= 0) {\n    return null;\n  }\n\n  // it was meant to be an optional but there is no such option\n  // in this parser (though it might be a valid option in a subparser)\n  return [ null, argString, null ];\n};\n\nArgumentParser.prototype._getOptionTuples = function (optionString) {\n  var result = [];\n  var chars = this.prefixChars;\n  var optionPrefix;\n  var argExplicit;\n  var action;\n  var actionOptionString;\n\n  // option strings starting with two prefix characters are only split at\n  // the '='\n  if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) >= 0) {\n    if (optionString.indexOf('=') >= 0) {\n      var optionStringSplit = optionString.split('=', 1);\n\n      optionPrefix = optionStringSplit[0];\n      argExplicit = optionStringSplit[1];\n    } else {\n      optionPrefix = optionString;\n      argExplicit = null;\n    }\n\n    for (actionOptionString in this._optionStringActions) {\n      if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        action = this._optionStringActions[actionOptionString];\n        result.push([ action, actionOptionString, argExplicit ]);\n      }\n    }\n\n  // single character options can be concatenated with their arguments\n  // but multiple character options always have to have their argument\n  // separate\n  } else if (chars.indexOf(optionString[0]) >= 0 && chars.indexOf(optionString[1]) < 0) {\n    optionPrefix = optionString;\n    argExplicit = null;\n    var optionPrefixShort = optionString.substr(0, 2);\n    var argExplicitShort = optionString.substr(2);\n\n    for (actionOptionString in this._optionStringActions) {\n      if (!$$.has(this._optionStringActions, actionOptionString)) continue;\n\n      action = this._optionStringActions[actionOptionString];\n      if (actionOptionString === optionPrefixShort) {\n        result.push([ action, actionOptionString, argExplicitShort ]);\n      } else if (actionOptionString.substr(0, optionPrefix.length) === optionPrefix) {\n        result.push([ action, actionOptionString, argExplicit ]);\n      }\n    }\n\n  // shouldn't ever get here\n  } else {\n    throw new Error(format('Unexpected option string: %s.', optionString));\n  }\n  // return the collected option tuples\n  return result;\n};\n\nArgumentParser.prototype._getNargsPattern = function (action) {\n  // in all examples below, we have to allow for '--' args\n  // which are represented as '-' in the pattern\n  var regexpNargs;\n\n  switch (action.nargs) {\n    // the default (null) is assumed to be a single argument\n    case undefined:\n    case null:\n      regexpNargs = '(-*A-*)';\n      break;\n    // allow zero or more arguments\n    case c.OPTIONAL:\n      regexpNargs = '(-*A?-*)';\n      break;\n    // allow zero or more arguments\n    case c.ZERO_OR_MORE:\n      regexpNargs = '(-*[A-]*)';\n      break;\n    // allow one or more arguments\n    case c.ONE_OR_MORE:\n      regexpNargs = '(-*A[A-]*)';\n      break;\n    // allow any number of options or arguments\n    case c.REMAINDER:\n      regexpNargs = '([-AO]*)';\n      break;\n    // allow one argument followed by any number of options or arguments\n    case c.PARSER:\n      regexpNargs = '(-*A[-AO]*)';\n      break;\n    // all others should be integers\n    default:\n      regexpNargs = '(-*' + $$.repeat('-*A', action.nargs) + '-*)';\n  }\n\n  // if this is an optional action, -- is not allowed\n  if (action.isOptional()) {\n    regexpNargs = regexpNargs.replace(/-\\*/g, '');\n    regexpNargs = regexpNargs.replace(/-/g, '');\n  }\n\n  // return the pattern\n  return regexpNargs;\n};\n\n//\n// Value conversion methods\n//\n\nArgumentParser.prototype._getValues = function (action, argStrings) {\n  var self = this;\n\n  // for everything but PARSER args, strip out '--'\n  if (action.nargs !== c.PARSER && action.nargs !== c.REMAINDER) {\n    argStrings = argStrings.filter(function (arrayElement) {\n      return arrayElement !== '--';\n    });\n  }\n\n  var value, argString;\n\n  // optional argument produces a default when not present\n  if (argStrings.length === 0 && action.nargs === c.OPTIONAL) {\n\n    value = (action.isOptional()) ? action.constant : action.defaultValue;\n\n    if (typeof (value) === 'string') {\n      value = this._getValue(action, value);\n      this._checkValue(action, value);\n    }\n\n  // when nargs='*' on a positional, if there were no command-line\n  // args, use the default if it is anything other than None\n  } else if (argStrings.length === 0 && action.nargs === c.ZERO_OR_MORE &&\n    action.optionStrings.length === 0) {\n\n    value = (action.defaultValue || argStrings);\n    this._checkValue(action, value);\n\n  // single argument or optional argument produces a single value\n  } else if (argStrings.length === 1 &&\n        (!action.nargs || action.nargs === c.OPTIONAL)) {\n\n    argString = argStrings[0];\n    value = this._getValue(action, argString);\n    this._checkValue(action, value);\n\n  // REMAINDER arguments convert all values, checking none\n  } else if (action.nargs === c.REMAINDER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n\n  // PARSER arguments convert all values, but check only the first\n  } else if (action.nargs === c.PARSER) {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    this._checkValue(action, value[0]);\n\n  // all other types of nargs produce a list\n  } else {\n    value = argStrings.map(function (v) {\n      return self._getValue(action, v);\n    });\n    value.forEach(function (v) {\n      self._checkValue(action, v);\n    });\n  }\n\n  // return the converted value\n  return value;\n};\n\nArgumentParser.prototype._getValue = function (action, argString) {\n  var result;\n\n  var typeFunction = this._registryGet('type', action.type, action.type);\n  if (typeof typeFunction !== 'function') {\n    var message = format('%s is not callable', typeFunction);\n    throw argumentErrorHelper(action, message);\n  }\n\n  // convert the value to the appropriate type\n  try {\n    result = typeFunction(argString);\n\n    // ArgumentTypeErrors indicate errors\n    // If action.type is not a registered string, it is a function\n    // Try to deduce its name for inclusion in the error message\n    // Failing that, include the error message it raised.\n  } catch (e) {\n    var name = null;\n    if (typeof action.type === 'string') {\n      name = action.type;\n    } else {\n      name = action.type.name || action.type.displayName || '<function>';\n    }\n    var msg = format('Invalid %s value: %s', name, argString);\n    if (name === '<function>') { msg += '\\n' + e.message; }\n    throw argumentErrorHelper(action, msg);\n  }\n  // return the converted value\n  return result;\n};\n\nArgumentParser.prototype._checkValue = function (action, value) {\n  // converted value must be one of the choices (if specified)\n  var choices = action.choices;\n  if (choices) {\n    // choise for argument can by array or string\n    if ((typeof choices === 'string' || Array.isArray(choices)) &&\n        choices.indexOf(value) !== -1) {\n      return;\n    }\n    // choise for subparsers can by only hash\n    if (typeof choices === 'object' && !Array.isArray(choices) && choices[value]) {\n      return;\n    }\n\n    if (typeof choices === 'string') {\n      choices = choices.split('').join(', ');\n    } else if (Array.isArray(choices)) {\n      choices =  choices.join(', ');\n    } else {\n      choices =  Object.keys(choices).join(', ');\n    }\n    var message = format('Invalid choice: %s (choose from [%s])', value, choices);\n    throw argumentErrorHelper(action, message);\n  }\n};\n\n//\n// Help formatting methods\n//\n\n/**\n * ArgumentParser#formatUsage -> string\n *\n * Return usage string\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.formatUsage = function () {\n  var formatter = this._getFormatter();\n  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);\n  return formatter.formatHelp();\n};\n\n/**\n * ArgumentParser#formatHelp -> string\n *\n * Return help\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.formatHelp = function () {\n  var formatter = this._getFormatter();\n\n  // usage\n  formatter.addUsage(this.usage, this._actions, this._mutuallyExclusiveGroups);\n\n  // description\n  formatter.addText(this.description);\n\n  // positionals, optionals and user-defined groups\n  this._actionGroups.forEach(function (actionGroup) {\n    formatter.startSection(actionGroup.title);\n    formatter.addText(actionGroup.description);\n    formatter.addArguments(actionGroup._groupActions);\n    formatter.endSection();\n  });\n\n  // epilog\n  formatter.addText(this.epilog);\n\n  // determine help from format above\n  return formatter.formatHelp();\n};\n\nArgumentParser.prototype._getFormatter = function () {\n  var FormatterClass = this.formatterClass;\n  var formatter = new FormatterClass({ prog: this.prog });\n  return formatter;\n};\n\n//\n//  Print functions\n//\n\n/**\n * ArgumentParser#printUsage() -> Void\n *\n * Print usage\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.printUsage = function () {\n  this._printMessage(this.formatUsage());\n};\n\n/**\n * ArgumentParser#printHelp() -> Void\n *\n * Print help\n *\n * See also [original guide][1]\n *\n * [1]:http://docs.python.org/dev/library/argparse.html#printing-help\n **/\nArgumentParser.prototype.printHelp = function () {\n  this._printMessage(this.formatHelp());\n};\n\nArgumentParser.prototype._printMessage = function (message, stream) {\n  if (!stream) {\n    stream = process.stdout;\n  }\n  if (message) {\n    stream.write('' + message);\n  }\n};\n\n//\n//  Exit functions\n//\n\n/**\n * ArgumentParser#exit(status=0, message) -> Void\n * - status (int): exit status\n * - message (string): message\n *\n * Print message in stderr/stdout and exit program\n **/\nArgumentParser.prototype.exit = function (status, message) {\n  if (message) {\n    if (status === 0) {\n      this._printMessage(message);\n    } else {\n      this._printMessage(message, process.stderr);\n    }\n  }\n\n  process.exit(status);\n};\n\n/**\n * ArgumentParser#error(message) -> Void\n * - err (Error|string): message\n *\n * Error method Prints a usage message incorporating the message to stderr and\n * exits. If you override this in a subclass,\n * it should not return -- it should\n * either exit or throw an exception.\n *\n **/\nArgumentParser.prototype.error = function (err) {\n  var message;\n  if (err instanceof Error) {\n    if (this.debug === true) {\n      throw err;\n    }\n    message = err.message;\n  } else {\n    message = err;\n  }\n  var msg = format('%s: error: %s', this.prog, message) + c.EOL;\n\n  if (this.debug === true) {\n    throw new Error(msg);\n  }\n\n  this.printUsage(process.stderr);\n\n  return this.exit(2, msg);\n};\n\nmodule.exports = ArgumentParser;\n"},"lineCount":1163}},"error":null,"hash":"52fafd77b9e91863b83a2304a222f3fa","cacheData":{"env":{}}}