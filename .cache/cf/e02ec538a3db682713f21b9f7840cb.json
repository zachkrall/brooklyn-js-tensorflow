{"id":"node_modules/argparse/lib/argument/exclusive.js","dependencies":[{"name":"/Users/zach/Code/brooklyn-js-tensorflow/package.json","includedInParent":true,"mtime":1574314359001},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/.babelrc","includedInParent":true,"mtime":1574222996221},{"name":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/package.json","includedInParent":true,"mtime":1574223218973},{"name":"util","loc":{"line":15,"column":19},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument/exclusive.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/util/util.js"},{"name":"./group","loc":{"line":17,"column":28},"parent":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument/exclusive.js","resolved":"/Users/zach/Code/brooklyn-js-tensorflow/node_modules/argparse/lib/argument/group.js"}],"generated":{"js":"/** internal\n * class MutuallyExclusiveGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ArgumentGroup = require('./group');\n\n/**\n * new MutuallyExclusiveGroup(container, options)\n * - container (object): main container\n * - options (object): options.required -> true/false\n *\n * `required` could be an argument itself, but making it a property of\n * the options argument is more consistent with the JS adaptation of the Python)\n **/\nvar MutuallyExclusiveGroup = module.exports = function MutuallyExclusiveGroup(container, options) {\n  var required;\n  options = options || {};\n  required = options.required || false;\n  ArgumentGroup.call(this, container);\n  this.required = required;\n\n};\nutil.inherits(MutuallyExclusiveGroup, ArgumentGroup);\n\n\nMutuallyExclusiveGroup.prototype._addAction = function (action) {\n  var msg;\n  if (action.required) {\n    msg = 'mutually exclusive arguments must be optional';\n    throw new Error(msg);\n  }\n  action = this._container._addAction(action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nMutuallyExclusiveGroup.prototype._removeAction = function (action) {\n  this._container._removeAction(action);\n  this._groupActions.remove(action);\n};\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/argparse/lib/argument/exclusive.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}}],"sources":{"node_modules/argparse/lib/argument/exclusive.js":"/** internal\n * class MutuallyExclusiveGroup\n *\n * Group arguments.\n * By default, ArgumentParser groups command-line arguments\n * into “positional arguments” and “optional arguments”\n * when displaying help messages. When there is a better\n * conceptual grouping of arguments than this default one,\n * appropriate groups can be created using the addArgumentGroup() method\n *\n * This class inherited from [[ArgumentContainer]]\n **/\n'use strict';\n\nvar util = require('util');\n\nvar ArgumentGroup = require('./group');\n\n/**\n * new MutuallyExclusiveGroup(container, options)\n * - container (object): main container\n * - options (object): options.required -> true/false\n *\n * `required` could be an argument itself, but making it a property of\n * the options argument is more consistent with the JS adaptation of the Python)\n **/\nvar MutuallyExclusiveGroup = module.exports = function MutuallyExclusiveGroup(container, options) {\n  var required;\n  options = options || {};\n  required = options.required || false;\n  ArgumentGroup.call(this, container);\n  this.required = required;\n\n};\nutil.inherits(MutuallyExclusiveGroup, ArgumentGroup);\n\n\nMutuallyExclusiveGroup.prototype._addAction = function (action) {\n  var msg;\n  if (action.required) {\n    msg = 'mutually exclusive arguments must be optional';\n    throw new Error(msg);\n  }\n  action = this._container._addAction(action);\n  this._groupActions.push(action);\n  return action;\n};\n\n\nMutuallyExclusiveGroup.prototype._removeAction = function (action) {\n  this._container._removeAction(action);\n  this._groupActions.remove(action);\n};\n\n"},"lineCount":55}},"error":null,"hash":"7186cfbcbd9255b9ebf88c329c3d59f1","cacheData":{"env":{}}}